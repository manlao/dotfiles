# shellcheck shell=bash

#=======================================================================#
# basic variables                                                       #
#=======================================================================#
export PATHS=(
  "/usr/sbin"
  "/usr/bin"
  "/sbin"
  "/bin"
)
export DEFAULT_NODE_VERSION="lts/*"

#=======================================================================#
# homebrew                                                              #
#=======================================================================#
HOMEBREW_PREFIX=$(brew --prefix)
export HOMEBREW_PREFIX
export PATHS=(
  "$HOMEBREW_PREFIX/sbin"
  "$HOMEBREW_PREFIX/bin"
  "${PATHS[@]}"
)
export HOMEBREW_CASK_OPTS="--no-quarantine"
export HOMEBREW_NO_AUTO_UPDATE=true

#=======================================================================#
# z                                                                     #
#=======================================================================#
# shellcheck disable=SC1091
source "$HOMEBREW_PREFIX/etc/profile.d/z.sh"

#=======================================================================#
# iterm2                                                                #
#=======================================================================#
if [ -f "$HOME/.iterm2_shell_integration.${SHELL##*/}" ]; then
  # shellcheck disable=SC1090
  source "$HOME/.iterm2_shell_integration.${SHELL##*/}"
  alias imgcat="~/.iterm2/imgcat"
  alias imgls="~/.iterm2/imgls"
  alias it2attention="~/.iterm2/it2attention"
  alias it2check="~/.iterm2/it2check"
  alias it2copy="~/.iterm2/it2copy"
  alias it2dl="~/.iterm2/it2dl"
  alias it2getvar="~/.iterm2/it2getvar"
  alias it2git="~/.iterm2/it2git"
  alias it2setcolor="~/.iterm2/it2setcolor"
  alias it2setkeylabel="~/.iterm2/it2setkeylabel"
  alias it2ul="~/.iterm2/it2ul"
  alias it2universion="~/.iterm2/it2universion"
  export ITERM_ENABLE_SHELL_INTEGRATION_WITH_TMUX=1
fi

#=======================================================================#
# go                                                                    #
#=======================================================================#
export GOPROXY=https://goproxy.io,direct
# goenv
export GOENV_GOPATH_PREFIX="$HOME/.go"
eval "$(goenv init -)"

#=======================================================================#
# rust                                                                  #
#=======================================================================#
PATHS+=("$HOME/.cargo/bin")

#=======================================================================#
# php                                                                   #
#=======================================================================#
PATHS+=("$HOME/.composer/vendor/bin")

#=======================================================================#
# node                                                                  #
#=======================================================================#
# nodenv
eval "$(nodenv init -)"
PATHS+=("$HOME/.nodenv/shims")
# npm
# shellcheck disable=SC2139
alias cnpm="npm --registry=https://registry.npm.taobao.org --cache=$HOME/.npm/.cache/cnpm --disturl=https://npm.taobao.org/dist --userconfig=$HOME/.cnpmrc"

#=======================================================================#
# python                                                                #
#=======================================================================#
# pyenv
eval "$(pyenv init -)"
PATHS+=("$HOME/.pyenv/shims")

#=======================================================================#
# ruby                                                                  #
#=======================================================================#
# rbenv
eval "$(rbenv init -)"
PATHS+=("$HOME/.rbenv/shims")

#=======================================================================#
# java                                                                  #
#=======================================================================#
# jenv
eval "$(jenv init -)"
PATHS+=("$HOME/.jenv/shims")

#=======================================================================#
# flutter                                                               #
#=======================================================================#
export PUB_HOSTED_URL="https://pub.flutter-io.cn"
export FLUTTER_STORAGE_BASE_URL="https://storage.flutter-io.cn"

#=======================================================================#
# android studio                                                        #
#=======================================================================#
export ANDROID_HOME="$HOME/Library/Android/sdk"
PATHS+=(
  "$ANDROID_HOME/emulator"
  "$ANDROID_HOME/tools"
  "$ANDROID_HOME/tools/bin"
  "$ANDROID_HOME/platform-tools"
)

#=======================================================================#
# asdf                                                                  #
#=======================================================================#
# shellcheck disable=SC1091
source "$HOMEBREW_PREFIX/opt/asdf/asdf.sh"

#=======================================================================#
# functions                                                             #
#=======================================================================#

install-command-line-tools() {
  "$DOTFILES_HOME/install" macos_install_command_line_tools
}

reset-launch-pad() {
  defaults write com.apple.dock ResetLaunchPad -bool true
  killall Dock
}

build-image() {
  if [ -z "$1" ]; then
    hdiutil create -o /tmp/macOS -size 20000m -volname macOS -layout SPUD -fs HFS+J
    hdiutil attach /tmp/macOS.dmg -noverify -mountpoint /Volumes/macOS
  fi

  local OS_VERSION_NAME
  OS_VERSION_NAME=$("$DOTFILES_HOME/install" get_os_version_name)

  if [ ! -f "/Applications/Install macOS $OS_VERSION_NAME.app/Contents/Resources/createinstallmedia" ]; then
    rm -rf "/Applications/Install macOS $OS_VERSION_NAME.app"
    softwareupdate --fetch-full-installer
  fi

  sudo "/Applications/Install macOS $OS_VERSION_NAME.app/Contents/Resources/createinstallmedia" --volume "/Volumes/${1:-macOS}" --nointeraction

  if [ -z "$1" ]; then
    hdiutil detach "/Volumes/Install macOS $OS_VERSION_NAME"
    hdiutil convert /tmp/macOS.dmg -format UDTO -o /tmp/macOS.cdr

    mv /tmp/macOS.cdr "$HOME/Downloads/macOS.iso"
    rm -rf /tmp/macOS.dmg
  fi
}

# https://stackoverflow.com/questions/750172/how-to-change-the-author-and-committer-name-and-e-mail-of-multiple-commits-in-gi
change-git-user() {
  local CALLBACK
  read -r -d '' CALLBACK <<EOF || true
old_email = b"$1"
new_name = b"$2"
new_email = b"$3"

if commit.committer_email == old_email:
  commit.committer_name = new_name
  commit.committer_email = new_email

if commit.author_email == old_email:
  commit.author_name = new_name
  commit.author_email = new_email
EOF
  git filter-repo --commit-callback "$CALLBACK"
}

standard-version() {
  local VERSION_TAG_PREFIX
  VERSION_TAG_PREFIX=$(git config --get --system gitflow.prefix.versionTag || git config --get --global gitflow.prefix.versionTag || echo "v")

  "${NODENV_ROOT:-$HOME/.nodenv}/shims/standard-version" -t "$VERSION_TAG_PREFIX" "$@"
}
