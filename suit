#!/usr/bin/env bash

set -e
shopt -s extglob

if [ -L "${BASH_SOURCE[0]}" ]; then
  FILE=$(readlink "${BASH_SOURCE[0]}")
else
  FILE="${BASH_SOURCE[0]}"
fi

DOTFILES_HOME=$(dirname "$FILE")
OS_NAME=$("$DOTFILES_HOME/install" get_os_name)
OS_VERSION=$("$DOTFILES_HOME/install" get_os_version)
export DOTFILES_HOME
export OS_NAME
export OS_VERSION

# shellcheck disable=SC1091
source "$DOTFILES_HOME/helper.rc"

help() {
  echo "suit [command]"
  echo ""
  echo "commands:"
  echo "  help                                                    Help"
  echo "  install [ --retry=never/always/number ]              Install"
  echo "  setup                                                 Set Up"
  echo "  update                                                Update"
  echo "  selfupdate                                       Self Update"
  echo ""
  echo "Ctrl + C to exit"
}

install() {
  local I

  for I in "$@"; do
    case "$I" in
      --retry=* )
        case "${I#*=}" in
          always )
            export RETRY=true
            ;;
          +([0-9]) )
            export RETRY=true
            export RETRY_TIMES="${I#*=}"
            ;;
        esac
        ;;
      --quiet )
        export QUIET=true
        ;;
    esac
  done

  run_file "$DOTFILES_HOME/.scripts/$OS_NAME.sh" install
  run_file "$DOTFILES_HOME/.scripts/$OS_NAME.sh" setup

  message --success "All Installed"

  local REBOOT
  read -r -p "Reboot now?（Y/N）" REBOOT

  if [ "$REBOOT" = "Y" ] || [ "$REBOOT" = "y" ]; then
    sudo reboot
  fi
}

setup() {
  run_file "$DOTFILES_HOME/.scripts/$OS_NAME.sh" setup
  message --success "All Set"
}

update() {
  run_file "$DOTFILES_HOME/.scripts/$OS_NAME.sh" update
  message --success "All Updated"
}

sync() {
  run_file "$DOTFILES_HOME/.scripts/$OS_NAME.sh" sync
  message --success "All Synced"
}

selfupdate() {
  message --info "Update dotfiles"
  git -C "$DOTFILES_HOME" pull
}

main() {
  case "$OS_NAME" in
    macOS )
      case $1 in
        install | setup | update | sync | selfupdate )
          "$@"
          ;;
        * )
          help
          ;;
      esac
      ;;
    * )
      message --error "NOT Supported OS System"
      exit 1
      ;;
  esac
}

main "$@"
